/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ 167:
/***/ ((__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) => {

eval("\n;// CONCATENATED MODULE: ./scripts/components/NewsCard.js\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar NewsCard = /*#__PURE__*/function () {\n  function NewsCard() {\n    _classCallCheck(this, NewsCard);\n  }\n\n  _createClass(NewsCard, [{\n    key: \"createCard\",\n    value: function createCard(_ref) {\n      var source = _ref.source,\n          title = _ref.title,\n          description = _ref.description,\n          url = _ref.url,\n          urlToImage = _ref.urlToImage,\n          publishedAt = _ref.publishedAt;\n      this.template = \"\\n      <a class=\\\"result__news\\\" href=\\\"\".concat(url, \"\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">\\n        <div class=\\\"result__image\\\">\\n          <img src=\\\"\").concat(urlToImage, \"\\\" alt=\\\"image\\\">\\n        </div>\\n        <div class=\\\"result__info\\\">\\n          <span class=\\\"result__date\\\">\").concat(publishedAt, \"</span>\\n          <h3 class=\\\"result__title\\\">\").concat(title, \"</h3>\\n          <p class=\\\"result__description\\\">\").concat(description, \"</p>\\n          <span class=\\\"result__source\\\">\").concat(source.name, \"</span>\\n        </div>\\n      </a>\");\n      return this.template;\n    }\n  }]);\n\n  return NewsCard;\n}();\n\n\n;// CONCATENATED MODULE: ./scripts/constants.js\nvar searchForm = document.querySelector('.search__form');\nvar loadingSection = document.querySelector('.loading');\nvar nfoundSection = document.querySelector('.nfound');\nvar errorSection = document.querySelector('.error');\nvar resultSection = document.querySelector('.result');\nvar resultContainer = document.querySelector('.result__container');\nvar resultButton = document.querySelector('.result__button');\n;// CONCATENATED MODULE: ./assets/images/no-image.jpg\n/* harmony default export */ const no_image = (__webpack_require__.p + \"./assets/images/no-image.jpg\");\n;// CONCATENATED MODULE: ./scripts/components/NewsList.js\nfunction NewsList_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction NewsList_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction NewsList_createClass(Constructor, protoProps, staticProps) { if (protoProps) NewsList_defineProperties(Constructor.prototype, protoProps); if (staticProps) NewsList_defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\nvar NewsList = /*#__PURE__*/function () {\n  function NewsList(newsCard, formateDate) {\n    NewsList_classCallCheck(this, NewsList);\n\n    this.cardsContainer = document.querySelector('.result__container');\n    this.newsCard = newsCard;\n    this.formateDate = formateDate;\n    this.initialAmount = 0;\n    this.renderAmount = 3;\n  }\n\n  NewsList_createClass(NewsList, [{\n    key: \"renderNewsList\",\n    value: function renderNewsList(articlesArray) {\n      for (var i = this.initialAmount; i < this.initialAmount + this.renderAmount; i++) {\n        if (articlesArray[i]) {\n          articlesArray[i].publishedAt = this.formateDate.formateDateLocal(new Date(articlesArray[i].publishedAt));\n          articlesArray[i].urlToImage = articlesArray[i].urlToImage ? articlesArray[i].urlToImage : no_image;\n          this.cardsContainer.insertAdjacentHTML('beforeend', this.newsCard.createCard(articlesArray[i]));\n        } else {\n          resultButton.setAttribute('style', 'display: none');\n        }\n      }\n    }\n  }, {\n    key: \"renderMoreNews\",\n    value: function renderMoreNews(articlesArray) {\n      this.initialAmount += this.renderAmount;\n      this.renderNewsList(articlesArray);\n    }\n  }]);\n\n  return NewsList;\n}();\n\n\n;// CONCATENATED MODULE: ./scripts/modules/FormateDate.js\nfunction FormateDate_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction FormateDate_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction FormateDate_createClass(Constructor, protoProps, staticProps) { if (protoProps) FormateDate_defineProperties(Constructor.prototype, protoProps); if (staticProps) FormateDate_defineProperties(Constructor, staticProps); return Constructor; }\n\nvar FormateDate = /*#__PURE__*/function () {\n  function FormateDate() {\n    FormateDate_classCallCheck(this, FormateDate);\n\n    this.optionsDate = {\n      day: 'numeric',\n      month: 'long',\n      year: 'numeric'\n    };\n  }\n\n  FormateDate_createClass(FormateDate, [{\n    key: \"formateDateLocal\",\n    value: function formateDateLocal(date) {\n      return date.toLocaleString('ru', this.optionsDate);\n    }\n  }, {\n    key: \"formateDateIco\",\n    value: function formateDateIco(date, days) {\n      if (days) {\n        date.setDate(date.getDate() - days);\n      }\n\n      return date.toISOString().slice(0, 10);\n    }\n  }]);\n\n  return FormateDate;\n}();\n\n\n;// CONCATENATED MODULE: ./scripts/utils.js\n\nvar formateDate = new FormateDate();\nfunction counterTotal(articlesArray, keyWord) {\n  var regExp = new RegExp(\"\".concat(keyWord), \"gi\");\n  var resultSort = articlesArray.map(function (article) {\n    return article.title.match(regExp);\n  });\n  var amountKey = resultSort.filter(function (word) {\n    return word !== null && word !== undefined;\n  });\n  return amountKey.length;\n}\n\nfunction counterWeek(currentDate, articlesArray, keyWord) {\n  var counter = 0;\n  var regExp = new RegExp(\"\".concat(keyWord), \"gi\");\n  articlesArray.forEach(function (article) {\n    var localDate = new Date(article.publishedAt);\n\n    if (formateDate.formateDateLocal(localDate) === formateDate.formateDateLocal(currentDate) && article.title.match(regExp)) {\n      counter++;\n    }\n  });\n  return counter;\n}\n\nfunction formateMonth() {\n  var optionsDate = {\n    month: 'long'\n  };\n  var dateMonth = new Date().toLocaleString('ru', optionsDate);\n  return dateMonth;\n}\nfunction formateWeek(articlesArray, keyWord) {\n  var date = new Date();\n  var optionsDate = {\n    day: 'numeric'\n  };\n  var days = ['вс', 'пн', 'вт', 'ср', 'чт', 'пт', 'сб'];\n  var week = [];\n\n  for (var i = 0; i < 7; i++) {\n    var currentDate = date;\n    var dayName = days[currentDate.getDay()];\n    var dayNum = currentDate.toLocaleString('ru', optionsDate);\n    var newsCount = counterWeek(currentDate, articlesArray, keyWord);\n    week.push({\n      dayNum: dayNum,\n      dayName: dayName,\n      newsCount: newsCount\n    });\n    currentDate = date.setDate(date.getDate() - 1);\n  }\n\n  return week;\n}\n;// CONCATENATED MODULE: ./scripts/modules/DataStorage.js\nfunction DataStorage_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction DataStorage_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction DataStorage_createClass(Constructor, protoProps, staticProps) { if (protoProps) DataStorage_defineProperties(Constructor.prototype, protoProps); if (staticProps) DataStorage_defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\nvar DataStorage = /*#__PURE__*/function () {\n  function DataStorage() {\n    DataStorage_classCallCheck(this, DataStorage);\n\n    this.nameStorage = 'news-analyzer';\n  }\n\n  DataStorage_createClass(DataStorage, [{\n    key: \"setStorage\",\n    value: function setStorage(newsObject, keyWord) {\n      var totalResults = newsObject.totalResults;\n      var amountKey = counterTotal(newsObject.articles, keyWord);\n      var month = formateMonth();\n      var weekArray = formateWeek(newsObject.articles, keyWord);\n      var analyticsObject = {\n        keyWord: keyWord,\n        totalResults: totalResults,\n        amountKey: amountKey,\n        month: month,\n        weekArray: weekArray\n      };\n      localStorage.setItem(this.nameStorage, JSON.stringify({\n        analyticsObject: analyticsObject,\n        newsObject: newsObject\n      }));\n    }\n  }, {\n    key: \"getStorage\",\n    value: function getStorage() {\n      var data = localStorage.getItem(this.nameStorage);\n\n      if (data !== null) {\n        return JSON.parse(data);\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"removeStorage\",\n    value: function removeStorage() {\n      localStorage.removeItem(this.nameStorage);\n    }\n  }]);\n\n  return DataStorage;\n}();\n\n\n;// CONCATENATED MODULE: ./scripts/modules/NewsApi.js\nfunction NewsApi_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction NewsApi_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction NewsApi_createClass(Constructor, protoProps, staticProps) { if (protoProps) NewsApi_defineProperties(Constructor.prototype, protoProps); if (staticProps) NewsApi_defineProperties(Constructor, staticProps); return Constructor; }\n\nvar NewsApi = /*#__PURE__*/function () {\n  function NewsApi(options) {\n    NewsApi_classCallCheck(this, NewsApi);\n\n    this.apiUrl = 'https://newsapi.org/v2/everything?';\n    this.fromDate = options.fromDate;\n    this.toDate = options.toDate;\n    this.pageSize = options.pageSize;\n    this.sortBy = options.sortBy;\n    this.apiKey = options.apiKey;\n  }\n\n  NewsApi_createClass(NewsApi, [{\n    key: \"getNews\",\n    value: function getNews(keyWord) {\n      return fetch(\"\".concat(this.apiUrl) + \"q=\".concat(keyWord, \"&\") + \"from=\".concat(this.fromDate, \"&\") + \"to=\".concat(this.toDate, \"&\") + \"pageSize=\".concat(this.pageSize, \"&\") + \"sortBy=\".concat(this.sortBy, \"&\") + \"apiKey=\".concat(this.apiKey)).then(function (res) {\n        return res.ok ? res.json() : Promise.reject(new Error(\"\".concat(res.status)));\n      }).then(function (newsObject) {\n        if (newsObject.totalResults === 0) {\n          throw new Error('Ничего не найдено. Нулевой результат!');\n        } else {\n          return newsObject;\n        }\n      })[\"catch\"](function (error) {\n        if (error.message === 'Failed to fetch') {\n          throw new Error('Проблемы на этапе запроса новостей!');\n        } else {\n          throw new Error('Ничего не найдено. Нулевой результат!');\n        }\n      });\n    }\n  }]);\n\n  return NewsApi;\n}();\n\n\n;// CONCATENATED MODULE: ./scripts/modules/CheckInput.js\nfunction CheckInput_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction CheckInput_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction CheckInput_createClass(Constructor, protoProps, staticProps) { if (protoProps) CheckInput_defineProperties(Constructor.prototype, protoProps); if (staticProps) CheckInput_defineProperties(Constructor, staticProps); return Constructor; }\n\nvar CheckInput = /*#__PURE__*/function () {\n  function CheckInput() {\n    CheckInput_classCallCheck(this, CheckInput);\n  }\n\n  CheckInput_createClass(CheckInput, [{\n    key: \"validateValue\",\n    value: function validateValue(value) {\n      if (value.validity.valueMissing) {\n        return value.setCustomValidity('Нужно ввести ключевое слово');\n      } else if (value.validity.tooShort || value.validity.tooLong) {\n        return value.setCustomValidity('Должно быть от 2 до 10 символов');\n      } else {\n        return true;\n      }\n    }\n  }]);\n\n  return CheckInput;\n}();\n\n\n;// CONCATENATED MODULE: ./pages/index.js\n\n\n\n\n\n\n\n\nvar checkInput = new CheckInput();\nvar dataStorage = new DataStorage();\nvar pages_formateDate = new FormateDate();\nvar toDateIco = pages_formateDate.formateDateIco(new Date());\nvar fromDateIco = pages_formateDate.formateDateIco(new Date(), 6);\nvar newsApi = new NewsApi({\n  fromDate: \"\".concat(fromDateIco),\n  toDate: \"\".concat(toDateIco),\n  pageSize: '100',\n  sortBy: 'popularity',\n  apiKey: {\"API_KEY\":\"60659df53b2641f4bc17059b6e641af7\"}.API_KEY,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nvar newsCard = new NewsCard();\nvar newsList = new NewsList(newsCard, pages_formateDate);\n\nfunction eventListeners() {\n  searchForm.addEventListener('submit', searchNews);\n  resultButton.addEventListener('click', moreNews);\n}\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  var data = dataStorage.getStorage();\n\n  if (data) {\n    var keyWord = data.analyticsObject.keyWord;\n    searchForm.elements.input.value = keyWord;\n    newsList.renderNewsList(data.newsObject.articles);\n    resultSection.classList.remove('hide');\n  }\n\n  eventListeners();\n});\n\nfunction searchNews(event) {\n  event.preventDefault();\n\n  if (checkInput.validateValue(searchForm.elements.input)) {\n    var keyWord = searchForm.elements.input.value;\n    resultContainer.textContent = '';\n    searchForm.elements.input.setAttribute('disabled', true);\n    searchForm.elements.button.setAttribute('disabled', true);\n    var promise = new Promise(function (resolve) {\n      loadingSection.classList.remove('hide');\n      nfoundSection.classList.add('hide');\n      errorSection.classList.add('hide');\n      resultSection.classList.add('hide');\n      resolve(newsApi.getNews(keyWord).then(function (newsObject) {\n        return newsObject;\n      })[\"catch\"](function (error) {\n        loadingSection.classList.add('hide');\n\n        if (error.message === 'Проблемы на этапе запроса новостей!') {\n          errorSection.classList.remove('hide');\n        } else if (error.message === 'Ничего не найдено. Нулевой результат!') {\n          nfoundSection.classList.remove('hide');\n        }\n      }));\n    });\n    promise.then(function (newsObject) {\n      dataStorage.setStorage(newsObject, keyWord);\n      newsList.renderNewsList(newsObject.articles);\n      loadingSection.classList.add('hide');\n      nfoundSection.classList.add('hide');\n      errorSection.classList.add('hide');\n      resultSection.classList.remove('hide');\n    })[\"catch\"](function (error) {\n      return console.log(error);\n    })[\"finally\"](function () {\n      searchForm.elements.input.removeAttribute('disabled');\n      searchForm.elements.button.removeAttribute('disabled');\n    });\n  }\n}\n\nfunction moreNews() {\n  var data = dataStorage.getStorage();\n\n  if (data) {\n    newsList.renderMoreNews(data.newsObject.articles);\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///167\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var scriptUrl;
/******/ 		if (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + "";
/******/ 		var document = __webpack_require__.g.document;
/******/ 		if (!scriptUrl && document) {
/******/ 			if (document.currentScript)
/******/ 				scriptUrl = document.currentScript.src
/******/ 			if (!scriptUrl) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				if(scripts.length) scriptUrl = scripts[scripts.length - 1].src
/******/ 			}
/******/ 		}
/******/ 		// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration
/******/ 		// or pass an empty string ("") and set the __webpack_public_path__ variable from your code to use your own logic.
/******/ 		if (!scriptUrl) throw new Error("Automatic publicPath is not supported in this browser");
/******/ 		scriptUrl = scriptUrl.replace(/#.*$/, "").replace(/\?.*$/, "").replace(/\/[^\/]+$/, "/");
/******/ 		__webpack_require__.p = scriptUrl + "../";
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__[167](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;